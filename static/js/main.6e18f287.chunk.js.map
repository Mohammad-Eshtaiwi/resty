{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/Form.jsx","components/Result.jsx","components/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","state","appName","this","Component","Footer","className","Form","url","methods","activeMethod","handleChange","e","setState","target","value","handleMethodChange","preventDefault","outerText","props","setResult","handleSubmit","reqHeader","Headers","append","initObject","method","toUpperCase","fetch","then","raw","console","log","json","result","results","count","length","headers","body","htmlFor","type","name","onChange","data-testid","onClick","map","index","Result","toRenderMethod","toRenderResult","src","theme","Main","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAEqBA,G,kNACjBC,MAAQ,CAAEC,QAAS,S,uDAEf,OACI,iCACI,6BAAKC,KAAKF,MAAMC,gB,GALIE,cCAfC,G,6KAEb,OACI,iCACI,qBAAKC,UAAU,YAAf,0C,GAJoBF,cCAfG,G,kNACjBN,MAAQ,CAAEO,IAAK,GAAIC,QAAS,CAAC,MAAO,OAAQ,MAAO,UAAWC,aAAc,O,EAC5EC,aAAe,SAAAC,GACX,EAAKC,SAAS,CAAEL,IAAKI,EAAEE,OAAOC,S,EAElCC,mBAAqB,SAAAJ,GACjBA,EAAEK,iBACFL,EAAEN,UAAY,SACd,EAAKO,SAAS,CAAEH,aAAcE,EAAEE,OAAOI,YACvC,EAAKC,MAAMC,UAAU,K,EAEzBC,aAAe,SAAAT,GACXA,EAAEK,iBADc,MAEc,EAAKhB,MAA3BS,EAFQ,EAERA,aAAcF,EAFN,EAEMA,IAClBc,EAAY,IAAIC,QACpBD,EAAUE,OAAO,eAAgB,aACjC,IAAIC,EAAa,CACbC,OAAQhB,EAAaiB,cAAeJ,QAASD,GAGjDM,MAAMpB,EAAKiB,GAAYI,MAAK,SAAAC,GAExB,OADAC,QAAQC,IAAIF,GACLA,EAAIG,UACZJ,MAAK,SAAAK,GAGJH,QAAQC,IAAIE,GACZ,IAAMC,EAAU,CAAEC,MAAOF,EAAOG,OAAQC,QAASJ,EAAOI,QAASC,KAAML,GACvEA,EAAS,CAACxB,EAAcyB,GACxBJ,QAAQC,IAAIE,GACZ,EAAKf,MAAMC,UAAUc,O,uDAKnB,IAAD,OACL,OACI,+BACI,sBAAK5B,UAAU,YAAf,UACI,sBAAKA,UAAU,cAAf,UACI,uBAAOkC,QAAQ,WAAf,kBACA,uBACIC,KAAK,OACLC,KAAK,WACL3B,MAAOZ,KAAKF,MAAMO,IAClBmC,SAAUxC,KAAKQ,aACfiC,cAAY,QAEhB,wBAAQH,KAAK,SAASI,QAAS1C,KAAKkB,aAAcuB,cAAY,gBAA9D,oBAEJ,qBAAKtC,UAAU,+BAAf,SACKH,KAAKF,MAAMQ,QAAQqC,KAAI,SAACpB,EAAQqB,GAAT,OACpB,wBAEIzC,UAAW,EAAKL,MAAMS,eAAiBgB,EAAS,SAAW,KAC3DmB,QAAS,EAAK7B,mBAHlB,SAMKU,GALIqB,iB,GArDH3C,c,wBCCnB,SAAS4C,EAAT,GAA6B,IACpCC,EACAC,EAFyBhB,EAAU,EAAVA,OAU7B,MAPe,KAAXA,IACAe,EACIf,EAAO,GAAK,IAChBgB,EAAiB,cAAE,IAAF,CAAYC,IAAKjB,EAAO,GAAIkB,MAAM,aAKnD,qBAAK9C,UAAU,YAAf,SACI,0BAASA,UAAU,SAASsC,cAAY,SAAxC,UACKK,EACAC,O,ICbIG,E,4MACjBpD,MAAQ,CAAEiC,OAAQ,I,EAClBd,UAAY,SAAAc,GACR,EAAKrB,SAAS,CAAEqB,Y,uDAEV,IACEA,EAAW/B,KAAKF,MAAhBiC,OACR,OACI,iCACI,cAAC,EAAD,CAAMd,UAAWjB,KAAKiB,YACtB,cAAC4B,EAAD,CAAQd,OAAQA,W,GAVE9B,aCWnBkD,MAVf,WACE,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCESC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6e18f287.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport '../scss/header.scss';\nexport default class Header extends Component {\n    state = { appName: \"RESTy\" }\n    render() {\n        return (\n            <header>\n                <h1>{this.state.appName}</h1>\n            </header>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport '../scss/footer.scss';\nexport default class Footer extends Component {\n    render() {\n        return (\n            <footer>\n                <div className=\"container\">\n                    &copy; 2020 code fellows\n            </div>\n            </footer>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport '../scss/form.scss';\nexport default class Form extends Component {\n    state = { url: '', methods: ['get', 'post', 'put', 'delete'], activeMethod: 'get' };\n    handleChange = e => {\n        this.setState({ url: e.target.value });\n    };\n    handleMethodChange = e => {\n        e.preventDefault()\n        e.className = \"active\"\n        this.setState({ activeMethod: e.target.outerText });\n        this.props.setResult(\"\")\n    };\n    handleSubmit = e => {\n        e.preventDefault()\n        const { activeMethod, url } = this.state\n        let reqHeader = new Headers();\n        reqHeader.append('Content-Type', 'text/json');\n        let initObject = {\n            method: activeMethod.toUpperCase(), Headers: reqHeader\n        };\n\n        fetch(url, initObject).then(raw => {\n            console.log(raw);\n            return raw.json()\n        }).then(result => {\n\n\n            console.log(result);\n            const results = { count: result.length, headers: result.headers, body: result }\n            result = [activeMethod, results]\n            console.log(result);\n            this.props.setResult(result)\n\n        })\n    }\n\n    render() {\n        return (\n            <form>\n                <div className=\"container\">\n                    <div className=\"flex-center\">\n                        <label htmlFor=\"endpoint\">URL:</label>\n                        <input\n                            type=\"text\"\n                            name=\"endpoint\"\n                            value={this.state.url}\n                            onChange={this.handleChange}\n                            data-testid=\"url\"\n                        />\n                        <button type=\"submit\" onClick={this.handleSubmit} data-testid=\"submit-button\">GO!</button>\n                    </div>\n                    <div className=\"methods flex-center flex-gap\">\n                        {this.state.methods.map((method, index) => (\n                            <button\n                                key={index}\n                                className={this.state.activeMethod === method ? 'active' : null}\n                                onClick={this.handleMethodChange}\n\n                            >\n                                {method}\n                            </button>\n                        ))}\n                    </div>\n\n                </div>\n            </form>\n        );\n    }\n}\n","import React from 'react'\nimport '../scss/result.scss';\nimport ReactJson from \"react-json-view\"\nexport default function Result({ result }) {\n    let toRenderMethod\n    let toRenderResult\n    if (result !== \"\") {\n        toRenderMethod =\n            result[0] + \":\";\n        toRenderResult = < ReactJson src={result[1]} theme=\"monokai\" />\n    }\n\n\n    return (\n        <div className=\"container\">\n            <section className=\"result\" data-testid=\"result\">\n                {toRenderMethod}\n                {toRenderResult}\n            </section>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport Form from './Form'\nimport Result from './Result'\n\nexport default class Main extends Component {\n    state = { result: \"\" }\n    setResult = result => {\n        this.setState({ result })\n    }\n    render() {\n        const { result } = this.state\n        return (\n            <main>\n                <Form setResult={this.setResult} />\n                <Result result={result} />\n            </main>\n        )\n    }\n}\n","import './scss/app.scss';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Main from './components/Main';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}